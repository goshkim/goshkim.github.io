---
import type { GetStaticPaths, InferGetStaticParamsType, InferGetStaticPropsType } from 'astro';

import PostNavigation from '@/components/post-navigation.astro';
import PostSeriesNavigation from '@/components/post-series-navigation.astro';
import { Badge } from '@/components/ui/badge';
import { Link } from '@/components/ui/link';
import { Separator } from '@/components/ui/separator';
import PostLayout from '@/layouts/post-layout.astro';
import { getPosts } from '@/lib/posts';

export const getStaticPaths = (async () => {
  const posts = await getPosts();
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { ...post },
  }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { slug }: Params = Astro.params;
const {
  data: { title, excerpt, tags, series, nextPost, prevPost, publishedDate },
  render,
} = Astro.props;

const { Content, headings } = await render();
---

<PostLayout seo={{ title: title, description: excerpt }}>
  <article class="flex flex-col gap-y-12">
    <div class="flex flex-col gap-y-6 text-default-900 dark:text-default-50">
      <h1 class="text-4xl font-extrabold tracking-tighter">
        {title}
      </h1>
      <time class="text-sm font-medium">{publishedDate.toLocaleDateString()}</time>
      <ul class="flex flex-wrap gap-x-2 gap-y-1">
        {
          tags.map(tag => (
            <li>
              <a href={`/tags/${tag}`}>
                <Badge variant="filled" color="primary" size="sm" clickable>
                  {tag}
                </Badge>
              </a>
            </li>
          ))
        }
      </ul>
    </div>

    <Separator />

    <PostSeriesNavigation series={series} />

    <div class="prose prose-slate dark:prose-invert">
      <Content />
    </div>

    <Separator />

    <PostNavigation prevPostSlug={prevPost?.slug} nextPostSlug={nextPost?.slug} />

    <!-- TODO: giscus 테마 커스터마이징 -->
    <div class="giscus"></div>
  </article>

  <!-- TODO: toc 완성 -->
  <ul slot="toc" class="flex flex-col">
    {
      headings.map(({ slug, depth, text }) => (
        <li>
          <Link
            href={`#${slug}`}
            underline="none"
            className="font-medium hover:text-primary-500 dark:hover:text-primary-400"
          >
            {text}
          </Link>
        </li>
      ))
    }
  </ul>
</PostLayout>
